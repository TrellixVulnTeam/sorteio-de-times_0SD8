{"ast":null,"code":"import { WebStorageUtil } from 'src/app/util/web-storage-utils';\nimport * as i0 from \"@angular/core\";\nexport let JogadorFormService = /*#__PURE__*/(() => {\n  class JogadorFormService {\n    constructor() {\n      this.className = 'jogadores';\n      this.jogadores = WebStorageUtil.getArray(this.className);\n    }\n\n    save(jogador) {\n      this.jogadores = WebStorageUtil.get(this.className);\n      console.log(jogador);\n      this.jogadores.push(jogador);\n      WebStorageUtil.set(this.className, this.jogadores);\n      console.log(this.jogadores);\n    }\n\n    update(jogador) {\n      this.jogadores = WebStorageUtil.get(this.className);\n      this.delete(jogador.nome);\n      this.save(jogador);\n    }\n\n    delete(nomeJogador) {\n      this.jogadores = WebStorageUtil.get(this.className);\n      this.jogadores = this.jogadores.filter(j => {\n        return j.nome?.valueOf() != nomeJogador?.valueOf();\n      });\n      WebStorageUtil.set(this.className, this.jogadores);\n      return true;\n    }\n\n    isExist(value) {\n      this.jogadores = WebStorageUtil.get(this.className);\n\n      for (let j of this.jogadores) {\n        if (j.nome?.valueOf() == value?.valueOf()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    getJogadores() {\n      this.jogadores = WebStorageUtil.get(this.className);\n      return this.jogadores;\n    }\n\n  }\n\n  JogadorFormService.ɵfac = function JogadorFormService_Factory(t) {\n    return new (t || JogadorFormService)();\n  };\n\n  JogadorFormService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JogadorFormService,\n    factory: JogadorFormService.ɵfac,\n    providedIn: 'root'\n  });\n  return JogadorFormService;\n})();","map":{"version":3,"mappings":"AAEA,SAASA,cAAT,QAA+B,gCAA/B;;AAKA,WAAaC,kBAAb;EAAM,MAAOA,kBAAP,CAAyB;IAI7BC;MAFA,iBAAoB,WAApB;MAGE,KAAKC,SAAL,GAAiBH,cAAc,CAACI,QAAf,CAAwB,KAAKC,SAA7B,CAAjB;IACA;;IAEFC,IAAI,CAACC,OAAD,EAAiB;MACnB,KAAKJ,SAAL,GAAiBH,cAAc,CAACQ,GAAf,CAAmB,KAAKH,SAAxB,CAAjB;MACAI,OAAO,CAACC,GAAR,CAAYH,OAAZ;MACA,KAAKJ,SAAL,CAAeQ,IAAf,CAAoBJ,OAApB;MACAP,cAAc,CAACY,GAAf,CAAmB,KAAKP,SAAxB,EAAmC,KAAKF,SAAxC;MACAM,OAAO,CAACC,GAAR,CAAY,KAAKP,SAAjB;IACD;;IAEDU,MAAM,CAACN,OAAD,EAAiB;MACrB,KAAKJ,SAAL,GAAiBH,cAAc,CAACQ,GAAf,CAAmB,KAAKH,SAAxB,CAAjB;MACA,KAAKS,MAAL,CAAYP,OAAO,CAACQ,IAApB;MACA,KAAKT,IAAL,CAAUC,OAAV;IACD;;IAEDO,MAAM,CAACE,WAAD,EAAoB;MACxB,KAAKb,SAAL,GAAiBH,cAAc,CAACQ,GAAf,CAAmB,KAAKH,SAAxB,CAAjB;MACA,KAAKF,SAAL,GAAiB,KAAKA,SAAL,CAAec,MAAf,CAAuBC,CAAD,IAAM;QAC3C,OAAOA,CAAC,CAACH,IAAF,EAAQI,OAAR,MAAqBH,WAAW,EAAEG,OAAb,EAA5B;MACD,CAFgB,CAAjB;MAGAnB,cAAc,CAACY,GAAf,CAAmB,KAAKP,SAAxB,EAAmC,KAAKF,SAAxC;MACA,OAAO,IAAP;IACD;;IAEDiB,OAAO,CAACC,KAAD,EAAc;MACnB,KAAKlB,SAAL,GAAiBH,cAAc,CAACQ,GAAf,CAAmB,KAAKH,SAAxB,CAAjB;;MACA,KAAK,IAAIa,CAAT,IAAc,KAAKf,SAAnB,EAA8B;QAC5B,IAAIe,CAAC,CAACH,IAAF,EAAQI,OAAR,MAAqBE,KAAK,EAAEF,OAAP,EAAzB,EAA2C;UACzC,OAAO,IAAP;QACD;MACF;;MACD,OAAO,KAAP;IACD;;IAEDG,YAAY;MACV,KAAKnB,SAAL,GAAiBH,cAAc,CAACQ,GAAf,CAAmB,KAAKH,SAAxB,CAAjB;MACA,OAAO,KAAKF,SAAZ;IACD;;EA5C4B;;;qBAAlBF;EAAkB;;;WAAlBA;IAAkBsB,SAAlBtB,kBAAkB;IAAAuB,YAFjB;;EAEd,OAAavB,kBAAb;AAAA","names":["WebStorageUtil","JogadorFormService","constructor","jogadores","getArray","className","save","jogador","get","console","log","push","set","update","delete","nome","nomeJogador","filter","j","valueOf","isExist","value","getJogadores","factory","providedIn"],"sourceRoot":"","sources":["/Users/caibrito/Documents/Caique/Projetos/sorteio-de-times/src/app/jogador-form/service/jogador-form.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Jogador } from 'src/app/model/jogador';\nimport { WebStorageUtil } from 'src/app/util/web-storage-utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JogadorFormService {\n  jogadores!: Jogador[];\n  className: string = 'jogadores';\n\n  constructor() {\n    this.jogadores = WebStorageUtil.getArray(this.className);\n   }\n\n  save(jogador: Jogador) {\n    this.jogadores = WebStorageUtil.get(this.className);\n    console.log(jogador)\n    this.jogadores.push(jogador);\n    WebStorageUtil.set(this.className, this.jogadores);\n    console.log(this.jogadores)\n  }\n\n  update(jogador: Jogador) {\n    this.jogadores = WebStorageUtil.get(this.className);\n    this.delete(jogador.nome);\n    this.save(jogador);\n  }\n\n  delete(nomeJogador: string): boolean {\n    this.jogadores = WebStorageUtil.get(this.className);\n    this.jogadores = this.jogadores.filter((j) => {\n      return j.nome?.valueOf() != nomeJogador?.valueOf();\n    });\n    WebStorageUtil.set(this.className, this.jogadores);\n    return true;\n  }\n\n  isExist(value: string): boolean {\n    this.jogadores = WebStorageUtil.get(this.className);\n    for (let j of this.jogadores) {\n      if (j.nome?.valueOf() == value?.valueOf()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getJogadores(): Jogador[] {\n    this.jogadores = WebStorageUtil.get(this.className);\n    return this.jogadores;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}